-- This sub code was programmatically added by update_flatbuffers.py
local _, Portunus = ...
local function require(m) local e=Portunus.Modules[m] if e==nil then error("Failed to load module " .. m) end return e end
local function export_fn()

--[[ game_state_schema.Aura

  Automatically generated by the FlatBuffers compiler, do not modify.
  Or modify. I'm a message, not a cop.

  flatc version: 24.3.25

  Declared by  : 
  Rooting type : game_state_schema.GameState ()

--]]

local flatbuffers = require('flatbuffers')

local Aura = {}
local mt = {}

function Aura.New()
  local o = {}
  setmetatable(o, {__index = mt})
  return o
end

function mt:Init(buf, pos)
  self.view = flatbuffers.view.New(buf, pos)
end

function mt:SourceGuid()
  local o = self.view:Offset(4)
  if o ~= 0 then
    return self.view:String(self.view.pos + o)
  end
end

function mt:SpellId()
  local o = self.view:Offset(6)
  if o ~= 0 then
    return self.view:Get(flatbuffers.N.Uint32, self.view.pos + o)
  end
  return 0
end

function mt:Expires()
  local o = self.view:Offset(8)
  if o ~= 0 then
    return self.view:Get(flatbuffers.N.Uint32, self.view.pos + o)
  end
  return 0
end

function mt:Stacks()
  local o = self.view:Offset(10)
  if o ~= 0 then
    return self.view:Get(flatbuffers.N.Uint8, self.view.pos + o)
  end
  return 0
end

function Aura.Start(builder)
  builder:StartObject(4)
end

function Aura.AddSourceGuid(builder, sourceGuid)
  builder:PrependUOffsetTRelativeSlot(0, sourceGuid, 0)
end

function Aura.AddSpellId(builder, spellId)
  builder:PrependUint32Slot(1, spellId, 0)
end

function Aura.AddExpires(builder, expires)
  builder:PrependUint32Slot(2, expires, 0)
end

function Aura.AddStacks(builder, stacks)
  builder:PrependUint8Slot(3, stacks, 0)
end

function Aura.End(builder)
  return builder:EndObject()
end

return Aura
end
Portunus.Modules["game_state_schema.Aura"]=export_fn()
